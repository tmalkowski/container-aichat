name: Build and Push Docker image

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
    paths:
      - Dockerfile
      - .github/workflows/publish.yml
      - '**/*.sh'
  delete:
    tags: [ '*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'delete'  # Skip on tag delete

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image tag
        id: vars
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.tag }}

      - name: Prune old 'latest' images
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IMAGE="ghcr.io/${{ github.repository }}"
          N=3  # number of latest images to keep

          # Fetch all versions of 'latest'
          gh api -H "Accept: application/vnd.github.v3+json" \
            /users/${{ github.repository_owner }}/packages/container/$(basename "$IMAGE")/versions \
            | jq '[.[] | select(.metadata.container.tags | index("latest"))]' > versions.json

          COUNT=$(jq length versions.json)

          if [ "$COUNT" -le "$N" ]; then
            echo "Nothing to prune (found $COUNT latest images)"
            exit 0
          fi

          # Delete oldest ones
          jq ".[${N}:] | .[].id" versions.json | while read -r id; do
            echo "Deleting old image version ID: $id"
            gh api -X DELETE \
              /users/${{ github.repository_owner }}/packages/container/$(basename "$IMAGE")/versions/$id
          done

  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'delete' && github.event.ref_type == 'tag'

    permissions:
      packages: write

    steps:
      - name: Delete image tag from GHCR
        run: |
          curl -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://ghcr.io/v2/${{ github.repository }}/manifests/$(\
              curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://ghcr.io/v2/${{ github.repository }}/tags/list \
              | jq -r '.tags[]' \
              | grep "^${GITHUB_REF#refs/tags/}$" \
              | xargs -I {} curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  https://ghcr.io/v2/${{ github.repository }}/manifests/{} \
                  | jq -r '.config.digest')
